/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

 #include <behaviors.dtsi>
 #include <dt-bindings/zmk/keys.h>
 #include <dt-bindings/zmk/bt.h>
 #include <dt-bindings/zmk/rgb.h>
 #include <dt-bindings/zmk/ext_power.h>
 #include <dt-bindings/zmk/outputs.h>

 #define DEFAULT 0
 #define LOWER  1
 #define RAISE  2
 #define ADJUST 3

/* NOTE: At the time of the creation of this keymap, there are no specified codes for 'eisuu' and 'kana' input in ZMK.
However, 'LANG1' and 'LANG2' are fully-functioning candidates for 'kana' and 'eisuu' input respectively.
As such, those are in use within the default layer at this time.*/

/ {
       keymap {
              compatible = "zmk,keymap";

              default_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
 // | GRAVE  |   1    |   2    |   3    |   4    |   5    |                      |   6    |   7    |   8    |   9    |   0    |  DEL   |
 // |  TAB   |   Q    |   W    |   E    |   R    |   T    |                      |   Y    |   U    |   I    |   O    |   P    |  BSPC  |
 // |  CTRL  |   A    |   S    |   D    |   F    |   G    |                      |   H    |   J    |   K    |   L    |   ;    |   '    |
 // |  SHIFT |   Z    |   X    |   C    |   V    |   B    |                      |   N    |   M    |   ,    |   .    |   /    |  RET   |
 // | ADJUST |  ESC   |  ALT   |  LGUI  | EISUU  | LOWER  |                      | RAISE  |  KANA  |  LEFT  |  DOWN  |  UP    |  RIGHT |
                     bindings = <
       &kp ESC    &kp Q   &kp W    &kp E    &kp R     &kp T                       &kp Y     &kp U     &kp I     &kp O      &kp P     &kp BSPC
       &kp TAB    &kp A   &kp S    &kp D    &kp F     &kp G                       &kp H     &kp J     &kp K     &kp L      &kp SEMI  &kp SQT
       &kp LSHFT  &kp Z   &kp X    &kp C    &kp V     &kp B                       &kp N     &kp M     &kp COMMA &kp PERIOD &kp SLASH &kp RET
       &mo LCTRL  &kp ESC &kp LALT &kp LGUI &kp LANG2 &mo LOWER                   &mo RAISE &kp LANG1 &kp LEFT  &kp DOWN   &kp UP    &kp RIGHT
                     >;
              };
              lower_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
                     bindings = <
       &trans    &trans   &trans &trans   &trans   &trans                         &trans    &trans   &trans &trans   &trans   &trans
       &trans    &trans   &trans &trans   &trans   &trans                         &trans    &trans   &trans &trans   &trans   &trans
       &trans    &trans   &trans &trans   &trans   &trans                         &trans    &trans   &trans &trans   &trans   &trans
       &trans    &trans   &trans &trans   &trans   &trans                         &trans    &trans   &trans &trans   &trans   &trans
                     >;
              };
              raise_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
                     bindings = <
       &trans    &trans   &trans &trans   &trans   &trans                         &trans    &trans   &trans &trans   &trans   &trans
       &trans    &trans   &trans &trans   &trans   &trans                         &trans    &trans   &trans &trans   &trans   &trans
       &trans    &trans   &trans &trans   &trans   &trans                         &trans    &trans   &trans &trans   &trans   &trans
       &trans    &trans   &trans &trans   &trans   &trans                         &trans    &trans   &trans &trans   &trans   &trans
                     >;
              };
              adjust_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
                     bindings = <
       &trans    &trans   &trans &trans   &trans   &trans                         &trans    &trans   &trans &trans   &trans   &trans
       &trans    &trans   &trans &trans   &trans   &trans                         &trans    &trans   &trans &trans   &trans   &trans
       &trans    &trans   &trans &trans   &trans   &trans                         &trans    &trans   &trans &trans   &trans   &trans
       &trans    &trans   &trans &trans   &trans   &trans                         &trans    &trans   &trans &trans   &trans   &trans
                     >;
              };
       };
};